import argparse
import yaml
import os
import re
from NAOConf import NAOConf
from naoqi import ALProxy

class NAOInteract:
    proxy = {}
    motion = {}
    posture = {}
    vision = {}
    trackers = {}

    def __init__(self):
        path = os.path.join(os.getcwd(), 'resource')

        try:
            with open(os.path.join(path, 'interact.yaml')) as file:
                data = yaml.load(file, Loader=yaml.FullLoader)
        except:
            print("Path where conf must stay: " + os.path.join(path, 'resource.yaml'))
            raise Exception("Insert a .yaml file with motion details")

        # Insert proxy to submit interaction and insert it into a disctionary
        try:
            if len(data['motion']) is not 0:
                pxy = ALProxy("ALMotion")
                upd = {'motion': pxy}
                self.proxy.update(upd)
                self.motion = data['motion']

            if len(data['posture']) is not 0:
                pxy = ALProxy("ALRobotPosture")
                upd = {'posture': pxy}
                self.proxy.update(upd)
                self.posture = data['posture']

            ####### insert other ########

        except:
            raise Exception("Problem with ALBroxer: connection refused.")

    def getInterationList(self):
        listObj = list(self.motion.keys()) + list(self.posture.keys()) + list(self.vision.keys()) + list(self.trackers.keys())
        listStr = ' '.join([str(elem) for elem in listObj])
        return listStr

class NAOAnimation(NAOInteract):
    isMotionEnabled = False
    isSeated = False

    def __init__(self):
        NAOInteract.__init__(self)

    def play(self, name):
        if name == "sit":
            self.sit()
        elif name == "stand":
            self.standUp()
        elif name == "guitar":
            self.playGuitar()
        elif name == "dance":
            self.dance()
        elif name == "rest":
            self.rest()
        else:
            print("NAOAnimation::play; No animation found")


    def stopMotion(self):
        if self.isMotionEnabled == True:
            if self.isSeated == True:
                self.standUp()
            self.crouch()
            self.proxy['motion'].rest()
            self.isMotionEnabled = False

    def enableMotion(self):
        if self.isMotionEnabled == False:
            self.proxy['motion'].moveInit()
            self.proxy['motion'].setStiffnesses("Body", 1.0)
            self.proxy['motion'].setFallManagerEnabled(True)
            self.isMotionEnabled = True

    def sit(self):
        self.enableMotion()
        if self.isSeated == False:
            id = self.proxy['posture'].post.goToPosture("Sit", self.posture['sit']['speed']/100.)
            self.proxy['posture'].wait(id, 0)
            self.isSeated = True

    def standUp(self):
        self.enableMotion()
        id = self.proxy['posture'].post.goToPosture("Stand", self.posture['stand']['speed']/100.)
        self.proxy['posture'].wait(id, 0)
        self.isSeated = False

    def crouch(self):
        self.enableMotion()
        if self.isSeated == True:
            self.standUp()

        id = self.proxy['posture'].post.goToPosture("Crouch", self.posture['crouch']['speed']/100.)
        self.proxy['posture'].wait(id, 0)

    def rest(self):
        self.crouch()

    # def dance(self):
    #     self.enableMotion()
    #     if self.isSeated == True:
    #         self.standUp()
    #     #
    #     # names = list()
    #     # times = list()
    #     # keys = list()
    #     #
    #     # names.append("HeadPitch")
    #     # times.append([1.36, 2.76, 3.08, 3.56, 4.64, 5.2, 5.92, 6.72, 7.24, 7.76, 8.28, 8.76, 9.24, 9.76, 10.28, 10.76, 11.28, 11.76, 12.28, 12.76, 13.28, 14.28, 14.76, 15.28, 15.76, 16.28, 16.76, 17.28, 17.76, 18.76, 19.28, 19.76, 20.28, 20.76, 21.76, 22.76, 23.24, 23.76, 24.24, 24.76, 25.28, 25.76, 26.28, 26.76, 27.28, 27.76, 28.76, 29.76, 30.12, 30.28, 30.76, 31.64, 32.12, 32.76, 33.28, 33.76, 34.28, 34.76, 35.28, 35.76, 36.28, 36.76, 37.28, 38.28, 38.76, 39.28, 39.76, 40.28, 40.76, 41.28, 41.76, 45.56, 46.72, 48.48, 50.32, 51.24, 52.2])
    #     # keys.append([0.44175, 0.44175, -0.443368, -0.443368, 0.369652, 0.496974, 0.454021, -0.084412, -0.082878, 0.325165, -0.066004, 0.217786, -0.066004, -0.375872, 0.00456004, -0.365133, 0.00456004, 0.205514, -0.200996, 0.00762803, 0.131882, 0.170232, -0.0782759, -0.50166, -0.0782759, -0.50166, -0.0782759, -0.50166, -0.656595, 0.343573, 0.361981, -0.04913, -0.380475, 0.240796, 0.516916, 0.108872, 0.0981341, 0.4034, 0.532256, 0.0735901, 0.269941, -0.182588, 0.085862, -0.182588, 0.085862, 0.325165, 0.091998, 0.467829, 0.01223, 0.380389, 0.380389, 0.447886, 0.340507, 0.00609404, -0.368202, 0.434081, -0.369736, 0.38806, -0.30224, 0.38806, -0.369736, 0.38806, -0.30224, -0.066004, -0.635118, 0.268407, 0.397265, -0.547679, 0.397265, 0.523053, -0.389678, 0.085862, -0.552281, 0.481634, 0.481634, -0.475581, 0.0705221])
    #     #
    #     # names.append("HeadYaw")
    #     # times.append([1.36, 2.76, 3.08, 3.56, 4.64, 5.2, 5.92, 6.72, 7.24, 7.76, 8.28, 8.76, 9.24, 9.76, 10.28, 10.76, 11.28, 11.76, 12.28, 12.76, 13.28, 14.28, 14.76, 15.28, 15.76, 16.28, 16.76, 17.28, 17.76, 18.76, 19.28, 19.76, 20.28, 20.76, 21.76, 22.76, 23.24, 23.76, 24.24, 24.76, 25.28, 25.76, 26.28, 26.76, 27.28, 27.76, 28.76, 29.76, 30.12, 30.28, 30.76, 31.64, 32.12, 32.76, 33.28, 33.76, 34.28, 34.76, 35.28, 35.76, 36.28, 36.76, 37.28, 38.28, 38.76, 39.28, 39.76, 40.28, 40.76, 41.28, 41.76, 45.56, 46.72, 48.48, 50.32, 51.24, 52.2])
    #     # keys.append([-0.467912, -0.467912, 0.260738, 0.260738, 0.230059, 0.538392, -0.512397, -0.917375, -0.021518, -1.126, -0.0629359, -0.918907, -0.0629359, -1.02936, -0.016916, -1.02015, -0.016916, -1.09225, 0.79457, -0.214801, 0.993989, -1.18429, -0.0859459, -0.0706059, -0.0859459, -0.0706059, -0.0859459, -0.0706059, -0.0782759, 0.5568, -0.411154, -0.0537319, 0.0720561, 0.493905, -0.39428, -0.015382, -0.0184499, -0.426494, -0.20944, 0.039842, -0.14884, -0.122762, -0.128898, -0.122762, -0.128898, 0.351244, -0.763974, 0.538392, -0.627448, -0.61671, -0.61671, 0.366584, 0.642704, 0.691793, 0.87127, -0.012314, -0.65506, 0.032172, 0.621227, 0.032172, -0.65506, 0.032172, 0.621227, 0.11961, -0.52467, 0.658043, 0.742414, 0.115008, -0.742414, 0.4034, -0.845275, 0.113474, 0.0459781, -0.01078, -0.01078, -0.00464395, -0.208666])
    #     #
    #     # names.append("LAnklePitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([0.0623418, 0.0623418, 0.0623418, -0.0312323, -0.0879903, -0.0879903, -0.0281642, -0.0158923, -0.0158923, -0.493928, -0.430072, -0.493928, -0.418879, 0.020944, -0.767552, -0.568977, -0.0910584, -0.298148, -0.298148, -0.293215, -0.682424, -0.781907, -0.357974, -0.425471, -0.256563, -0.280998, -0.518363, -0.167552, -0.292008, -0.0112903, -0.121738, -0.121738, -0.489898, -0.879534, -0.879534, -0.176962, -0.176962, -0.00361468, -0.308887, 0.0101913, 0.0608078, 0.21881, 0.162052, 0.207694, 0.162052, -0.0802851, -0.155334, -0.1309, -0.549725, -0.595157, -0.643299, 0.0654097, 0.224945, 0.224945, -0.0419703])
    #     #
    #     # names.append("LAnkleRoll")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([-0.151844, -0.151844, -0.0605488, 0.131201, 0.151143, 0.151143, 0.154211, -0.0973648, -0.0973648, 0.0729092, 0.143473, 0.0729092, 0.143473, -0.0436748, 0.138871, 0.100521, -0.0329368, 0.0192192, 0.0192192, 0.0667732, -0.137881, -0.0558505, -0.165806, -0.0268008, 0.0279253, 0.0558505, 0.179769, 0.219911, 0.0227781, -0.193732, 0.0483652, 0.0483652, -0.194007, -0.0959931, -0.0988987, -0.39968, -0.328998, 0.225266, -0.0139626, 0.139362, 0.0621712, 0.0330253, -0.0927629, 0.00437015, -0.0927629, -0.00532477, -0.00532477, 0.140405, -0.0927629, -0.226221, -0.246163, -0.0912287, 0.0253553, 0.0253553, -0.0636167])
    #     #
    #     # names.append("LElbowRoll")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([0, 0, -0.016832, -0.424876, -1.27778, -1.04615, -1.05995, -0.743948, -0.539926, -0.342041, -1.44345, -0.800706, -0.969447, -0.6335, -0.131882, -0.6335, -0.131882, -1.05228, -0.254602, -0.00609404, -0.984786, -0.966378, -0.745483, 0, -0.612024, 0, -0.612024, 0, -0.612024, -0.523053, -1.06149, -0.455555, -0.952573, -0.492371, -1.06149, -0.83147, -1.36837, -1.14594, -0.472429, -0.624296, -0.424876, -0.61049, -0.424876, -0.596684, -0.424876, -0.601287, -0.429478, -0.605888, -1.23636, -0.920358, -0.196309, -0.093532, -0.914223, -0.914223, -0.906552, -1.23943, -0.742414, -0.759288, -0.00609404, -0.711735, -0.0183661, -0.711735, -0.0183661, -0.601287, -0.676451, -0.585945, -0.223922, -0.271475, -0.736278, -1.03081, -0.929562, -1.03541, -1.01853, -1.02314, 0, 0, -1.47106, -0.710201])
    #     #
    #     # names.append("LElbowYaw")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([-1.13213, -1.13213, -1.13827, -1.18429, -1.21344, -0.964928, -0.667332, -1.2932, -2.0944, -2.08782, -0.744032, -2.05101, -0.0245859, -0.483252, -0.481718, -0.483252, -0.481718, -0.38661, 0.06592, -0.029188, -0.196393, -0.200996, -0.544613, -0.420357, -0.374338, -0.420357, -0.374338, -0.420357, -0.374338, -0.819198, -1.6629, -0.918907, 0.075124, -0.553816, -1.6629, -0.941834, -0.523053, -2.08007, -2.00037, -1.51563, -1.68591, -1.5233, -1.68591, -1.53097, -1.68591, -1.52484, -1.6767, -1.51717, -1.20577, 0.877407, 0.507713, 0.500042, 0.883542, 0.883542, -0.259288, 0.207048, 0.447886, -0.506262, -0.231677, -0.204064, -0.213269, -0.204064, -0.213269, -0.538476, -2.0944, -0.415757, -2.0944, -2.0944, -1.76414, -0.366667, -1.92674, -0.337522, -0.335988, -1.3699, -2.01418, -2.01418, -0.457173, -1.11066])
    #     #
    #     # names.append("LHand")
    #     # times.append([1.4, 3.08, 3.44, 4.4, 5.16, 6.64, 7.2, 8.24, 8.72, 9.2, 9.72, 10.72, 11.72, 12.72, 13.72, 15.24, 17.24, 18.24, 19.24, 20.72, 22.24, 22.72, 23.72, 27.88, 28.72, 30.24, 32.72, 33.72, 37.24, 38.24, 39.24, 45.36, 50.2, 51.16])
    #     # keys.append([0.674206, 0.674206, 0.674206, 0.258935, 0.258935, 0.258935, 0.256753, 0.613843, 0.613843, 0.613843, 0.614934, 0.613479, 0.613479, 0.257844, 0.257844, 0.796751, 0.796751, 0.295298, 0.295298, 0.296389, 0.295298, 0.295298, 0.237117, 0.24148, 0.574934, 0.577116, 0.577479, 0.577843, 0.577479, 0.577843, 0.577479, 0.577843, 0.577843, 0.221818])
    #     #
    #     # names.append("LHipPitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([-0.127294, -0.127294, -0.127294, -0.0920118, 0.497044, 0.497044, 0.343645, 0.274614, 0.274614, 0.34978, 0.406538, 0.34978, 0.406538, 0.0123002, 0.193313, 0.00923218, 0.340577, 0.25774, 0.25774, -0.13343, -0.168712, -0.329782, 0.0567862, 0.262342, -0.185867, 0.107127, -0.139847, 0.186895, 0.26973, 0.33444, 0.398869, 0.398869, -0.0199139, -0.361995, -0.361995, 0.139622, 0.139622, 0.298877, 0.162632, 0.289672, 0.397335, -0.38654, -0.400345, -0.354607, -0.400345, 0.306829, 0.306829, 0.424946, 0.497044, 0.223992, 0.230129, 0.200982, -0.383472, -0.383472, 0.266945])
    #     #
    #     # names.append("LHipRoll")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([0.0610059, 0.0610059, 0.0610059, -0.147618, -0.189037, -0.189037, -0.127676, 0.134638, 0.134638, 0.014986, 0.0870839, 0.014986, 0.0870839, 0.073278, 0.014986, -0.0816561, 0.090152, 0.0671419, 0.0671419, -0.0555781, 0.39235, 0.226678, 0.16225, 0.0870839, -0.0496235, -0.419317, -0.345685, -0.255179, 0.0853684, 0.295708, 0.014986, 0.014986, 0.389282, 0.754373, 0.754373, 0.631654, 0.631654, -0.359491, -0.397659, -0.195353, -0.077054, -0.130744, 0.0119179, -0.18615, 0.0119179, 0.0349279, 0.0349279, -0.179832, 0.212873, 0.536546, 0.550351, 0.134638, -0.0893261, -0.0893261, 0.133104])
    #     #
    #     # names.append("LHipYawPitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([-0.576742, -0.576742, -0.576742, -0.576742, -0.404934, -0.404934, -0.455555, -0.289883, -0.289883, -0.54146, -0.959931, -0.54146, -0.959931, -0.496974, -0.493905, -0.404934, -0.360449, -0.384992, -0.384992, -0.483168, -0.391128, -0.340507, -0.303691, -0.354312, -0.483168, -0.391128, -0.340507, -0.303691, -0.384992, -0.401866, -0.384992, -0.384992, -0.358915, -0.628898, -0.628898, -0.582879, -0.582879, -0.358915, -0.674919, -0.582879, -0.443284, -0.500042, -0.506179, -0.506179, -0.506179, -0.329768, -0.329768, -0.489305, -0.277612, -0.354312, -0.361981, -0.253067, -0.398797, -0.398797, -0.470897])
    #     #
    #     # names.append("LKneePitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([0.212592, 0.212592, 0.212592, 0.430419, 0.0177736, 0.0177736, 0.0116376, 0.0346476, 0.0346476, 0.692733, 0.67586, 0.692733, 0.67586, 0.34605, 1.02254, 0.965785, 0.0714636, 0.405876, 0.405876, 0.671257, 1.14373, 1.33343, 0.497419, 0.494848, 0.699619, 0.540082, 1.00949, 0.268564, 0.388217, 0.0300457, 0.109814, 0.109814, 0.729549, 1.58552, 1.58552, 0.408943, 0.408943, 0.0292604, 0.849202, 0.181127, 0.0147056, 0.0423176, 0.0591916, 0.0538045, 0.0591916, 0.0315796, 0.0315796, 0.183446, 0.493314, 0.766365, 0.738754, 0.0131716, 0.0269776, 0.0269776, 0.114416])
    #     #
    #     # names.append("LShoulderPitch")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([1.08143, 1.08143, 1.12898, 1.52169, 1.95733, 1.61986, 1.35601, 1.37135, 1.31613, 1.55697, 1.72417, 1.54623, 0.651908, 1.64287, 1.64287, 1.64287, 1.64287, 1.15199, 1.29159, 1.09523, 1.04461, 1.07529, 1.34374, -1.05237, -0.823801, -1.05237, -0.823801, -1.05237, -0.823801, -0.510863, 1.3913, 2.05704, 2.0944, 1.73491, 1.3913, 1.40058, 0.704148, 0.808459, 1.59072, 1.57998, 1.61066, 1.60299, 1.60912, 1.60912, 1.60912, 1.60452, 1.60452, 1.60606, 1.39436, -0.0706059, 0.394197, 0.394197, -0.019984, -0.019984, 0.926494, 0.555266, 0.139552, -0.243948, 0.917291, 0.889678, 0.88661, 0.889678, 0.88661, 1.03081, 0.29602, -1.37297, 0.256136, 0.608956, -0.10282, -0.401949, 0.312894, 1.34067, 1.35448, 1.48487, 1.54163, 1.54163, 1.27778, 1.59532])
    #     #
    #     # names.append("LShoulderRoll")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([0.085862, 0.085862, 0.115008, 0.118076, 0.223922, 0.0291041, 0.021434, 0.021434, 0.075124, 0.0260361, 0.789967, 0.484702, 0.021434, 0.911154, 1.18881, 0.911154, 1.18881, 0.0551821, 1.48027, 0.144154, 0.0275701, 0.0352401, 0.021434, 0.432547, 0.0352401, 0.432547, 0.0352401, 0.432547, 0.0352401, 0.507713, 0.481634, 0.51845, 0.461692, 0.719404, 0.481634, 0.01078, 0.016916, 0.00771196, 0.0643861, 0.102736, 0.0904641, 0.0904641, 0.0904641, 0.0904641, 0.091998, 0.0904641, 0.0904641, 0.093532, 0.409536, 0.052114, 0.552198, 0.731675, 0.076658, 0.076658, 0.977116, 0.668782, 1.43118, 1.36982, 0.207048, 0.021434, 0.863599, 0.021434, 0.863599, 0.358915, 0.658043, 0.187106, 0.831386, 0.751617, 0.616627, 0.033706, 0.613558, 0.536858, 0.549129, 0.383458, 0.438682, 0.438682, 0.391128, 0.199378])
    #     #
    #     # names.append("LWristYaw")
    #     # times.append([1.4, 3.08, 3.44, 4.4, 5.16, 6.64, 7.2, 7.72, 8.24, 8.72, 9.2, 9.72, 10.72, 11.72, 12.72, 13.72, 15.24, 17.24, 18.24, 19.24, 20.72, 22.24, 22.72, 23.72, 27.88, 28.72, 30.24, 32.72, 33.72, 37.24, 38.24, 39.24, 45.36, 50.2])
    #     # keys.append([0.415673, 0.415673, 0.243864, -0.188724, 0.351244, 0.265341, 1.10904, -0.570723, -0.79312, -0.813062, -0.79312, -1.42666, -1.15514, -1.82551, -0.93118, -0.0767419, -1.30394, -1.30394, 0.676451, 0.839057, 0.118076, 0.136484, 0.136484, 0.567537, 0.550664, -0.231677, -0.236277, -0.22554, -0.374338, -0.372804, -0.558418, -0.673468, -0.667332, -0.667332])
    #     #
    #     # names.append("RAnklePitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([-0.245987, -0.245987, -0.245987, -0.426998, -0.353366, -0.353366, -0.00668269, 0.00098731, 0.00098731, -0.0802851, 0.258309, -0.0802851, 0.246091, -0.31765, -0.594204, 0.0575959, -0.0787807, -0.292008, -0.292008, -0.256563, -0.293215, -0.518363, -0.207637, -0.456145, -0.293215, -0.670206, -0.681649, -0.305433, -0.298148, -0.0358286, -0.0296928, -0.0296928, -0.00361468, -0.205949, -0.179769, 0.0101913, 0.0101913, -0.489898, -0.86879, -0.176962, -0.0726446, 0.181999, 0.207694, 0.162052, 0.207694, -0.116937, -0.179769, -0.1309, -0.509835, 0.144862, 0.0746193, -0.0404307, 0.175863, 0.175863, 0.0332012])
    #     #
    #     # names.append("RAnkleRoll")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([-0.0657301, -0.0657301, -0.0657301, 0.179769, 0.179769, 0.179769, 0.233874, 0.179769, 0.179769, 0.261799, 0.303687, 0.303687, 0.371755, 0.233874, 0.289725, 0.579449, 0.165806, 0.0680678, 0.0558505, -0.0933421, -0.0558505, -0.137881, -0.151844, 0.0278439, 0.0139626, 0.137881, 0.109637, 0.179769, -0.0192192, -0.0780021, 0.151844, 0.0355138, -0.225266, 0.0680678, 0.0558505, -0.139362, -0.139362, 0.194007, 0.106078, 0.328998, 0.34383, 0.165806, -0.00437015, 0.0927629, -0.00437015, 0.137881, 0.205949, 0.39968, 0.0416498, 0.179769, 0.136758, 0.0661939, -0.0289142, -0.0289142, -0.0749341])
    #     #
    #     # names.append("RElbowRoll")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([1.55552, 1.55552, 1.54018, 0.449504, 1.02322, 1.07384, 1.55245, 1.09685, 1.46501, 0.446436, 1.24718, 0.673468, 0.833004, 0.398883, 0.658129, 0.398883, 0.658129, 1.17355, 0.521602, 0.751701, 0.023052, 0.636652, 1.11833, 4.19617e-05, 0.656595, 4.19617e-05, 0.656595, 4.19617e-05, 0.656595, 0.598302, 0.980268, 0.83147, 1.36837, 1.14594, 0.980268, 0.455555, 0.952573, 0.492371, 1.52944, 0.89283, 1.48649, 0.994073, 1.48956, 0.994073, 1.48956, 0.981802, 1.46961, 0.966462, 1.55092, 0.765508, 1.55552, 1.56319, 0.691876, 0.691876, 0.503194, 0.582963, 0.925044, 1.26866, 0.506262, 0.019984, 0.628982, 0.019984, 0.628982, 0.43263, 0.717953, 0.265424, 1.17662, 1.33155, 1.44047, 0.443368, 1.35303, 0.823801, 0.840674, 1.18429, 1.13674, 1.13674, 1.29627, 0.687274])
    #     #
    #     # names.append("RElbowYaw")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([0.662646, 0.662646, 1.44038, 2.0908, 1.99262, 0.872804, 0.569072, 1.38209, 2.0908, 2.08773, 0.785367, 2.08926, -0.273093, 0.516916, 1.30539, 0.516916, 1.30539, 0.555266, 1.18114, 0.96331, 0.955639, 1.3238, 0.593616, 0.233125, 0.170232, 0.233125, 0.170232, 0.233125, 0.170232, 0.984786, 2.08007, 0.941834, 0.523053, 2.08007, 2.08007, 0.918907, -0.075124, 0.553816, 0.944902, 2.0816, 0.757754, 2.0944, 0.75622, 2.07853, 0.743948, 2.07239, 0.74088, 2.07699, 0.450955, -0.306841, -0.405018, -0.234743, -0.306841, -0.306841, -0.217869, 0.282215, -0.214801, 0.628898, 0.354312, 0.615092, 0.369652, 0.615092, 0.369652, 0.575208, 2.09387, 0.825249, 0.33437, -0.055266, -1.0493, 1.31153, 0.793036, -0.119694, -0.11049, 1.15199, 0.11961, 0.11961, 0.357381, 1.18881])
    #     #
    #     # names.append("RHand")
    #     # times.append([1.4, 3.08, 3.44, 4.4, 5.16, 6.64, 7.2, 8.24, 8.72, 9.2, 9.72, 10.72, 11.72, 12.72, 13.72, 15.24, 17.24, 18.24, 19.24, 20.72, 22.24, 22.72, 23.72, 24.24, 24.76, 25.52, 26.28, 27, 27.88, 28.72, 30.24, 32.72, 33.72, 37.24, 38.24, 39.24, 45.36, 50.2, 51.16])
    #     # keys.append([0.178571, 0.178571, 0.537479, 0.381116, 0.382207, 0.382207, 0.382207, 0.585115, 0.585115, 0.585115, 0.587661, 0.588025, 0.587661, 0.249844, 0.249844, 0.849115, 0.849115, 0.340389, 0.340389, 0.340753, 0.340389, 0.340389, 0.247273, 0.630909, 0.370909, 0.723636, 0.469091, 0.749091, 0.469091, 0.808388, 0.810933, 0.81166, 0.81166, 0.811297, 0.811297, 0.814206, 0.81166, 0.81166, 0.287273])
    #     #
    #     # names.append("RHipPitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([-0.0386032, -0.0386032, -0.0386032, -0.0309332, 0.0595728, 0.0595728, 0.202235, 0.277401, 0.277401, 0.0288929, 0.355635, 0.0288929, 0.355635, 0.153147, 0.176156, 0.337227, 0.355635, 0.26973, 0.26973, -0.185867, 0.107127, -0.139847, 0.186895, 0.21144, -0.13343, -0.168712, -0.329782, 0.0567862, 0.25774, 0.397054, 0.409325, 0.409325, 0.298877, 0.165419, 0.165419, 0.289672, 0.289672, -0.0199139, -0.366879, 0.139622, 0.435402, -0.331597, -0.354607, -0.400345, -0.354607, 0.317285, 0.317285, 0.435402, 0.498297, 0.337227, 0.357169, 0.183827, -0.353073, -0.353073, 0.309614])
    #     #
    #     # names.append("RHipRoll")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([0.0849055, 0.0849055, 0.0849055, -0.206554, -0.301663, -0.301663, -0.221894, -0.159001, -0.159001, -0.439722, -0.648346, -0.439722, -0.648346, -0.341547, -0.33541, -0.622269, -0.119116, -0.0853684, -0.0853684, 0.0496235, 0.419317, 0.345685, 0.255179, -0.131389, 0.0555781, -0.39235, -0.226678, -0.16225, -0.0671419, 0.0511575, -0.148262, -0.148262, 0.359491, 0.382501, 0.382501, 0.195353, 0.195353, -0.389282, -0.734251, -0.631654, -0.488811, 0.0204776, 0.18615, -0.0119179, 0.18615, -0.178942, -0.178942, -0.531762, -0.119116, 0.00973951, -0.0163385, -0.129854, 0.103314, 0.103314, 0.00973951])
    #     #
    #     # names.append("RKneePitch")
    #     # times.append([1.32, 3.04, 3.6, 4.04, 5.12, 5.44, 6.68, 7.84, 8.84, 9.84, 10.36, 10.84, 11.36, 12.24, 13.04, 13.84, 14.84, 15.84, 17.36, 17.84, 18.36, 18.84, 19.36, 19.84, 20.36, 20.84, 21.36, 21.84, 22.84, 24.32, 26.36, 27.36, 27.84, 28.84, 29.52, 30.36, 30.72, 31.44, 32.2, 32.84, 33.36, 34.36, 35.36, 36.36, 37.36, 38.36, 38.84, 39.84, 40.84, 41.84, 45.48, 46.76, 48.4, 50.28, 52])
    #     # keys.append([0.41276, 0.41276, 0.41276, 0.691948, 0.6582, 0.6582, 0.0844844, 0.0277265, 0.0277265, 0.606045, 0.142776, 0.606045, 0.142776, 0.503266, 0.905175, 0.0277265, 0.0476684, 0.388217, 0.388217, 0.699619, 0.540082, 1.00949, 0.268564, 0.561558, 0.671257, 1.14373, 1.33343, 0.497419, 0.405876, 0.0307944, 0.0292604, 0.0292604, 0.0292604, 0.822338, 0.822338, 0.181127, 0.181127, 0.729549, 1.52951, 0.408943, 0.0461345, 0.0246584, 0.0538045, 0.0591916, 0.0538045, 0.0399984, 0.0399984, 0.173456, 0.475655, 0.0630085, 0.0323284, 0.115164, 0.0323284, 0.0323284, 0.0292604])
    #     #
    #     # names.append("RShoulderPitch")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([0.38661, 0.38661, 0.515466, 1.60614, 2.07555, 1.44814, 0.664264, 1.2119, 0.952657, 1.68591, 1.78715, 1.5095, 0.96186, 1.17815, 1.2932, 1.17815, 1.2932, 0.719487, 1.91908, 2.08321, 2.08782, 1.48495, 1.24258, -1.11978, -0.926494, -1.11978, -0.926494, -1.11978, -0.926494, -0.404934, 1.40979, 1.40058, 0.704148, 0.808459, 1.40979, 2.05704, 2.0944, 1.73491, 1.34536, 1.88839, 1.3561, 1.45427, 1.38524, 1.44967, 1.40058, 1.45734, 1.41899, 1.46961, 1.16895, 0.247016, 0.254685, 0.273093, 0.179519, 0.179519, 0.728692, 0.90817, 0.211735, 0.289967, 0.948054, 1.11373, 0.823801, 1.11373, 0.823801, 0.987938, 0.154976, -1.19801, -0.507713, -0.506179, -0.361981, 0.335988, 0.365133, -1.44959, -1.43885, 0.648924, 0.935783, 0.935783, 1.18889, 1.67977])
    #     #
    #     # names.append("RShoulderRoll")
    #     # times.append([1.44, 3.12, 3.64, 4.48, 5.24, 6.04, 6.8, 7.04, 7.32, 7.8, 8.32, 8.8, 9.28, 9.8, 10.32, 10.8, 11.32, 11.8, 12.32, 12.8, 13.32, 13.72, 14.04, 14.8, 15.32, 15.8, 16.32, 16.8, 17.32, 17.8, 18.32, 18.8, 19.32, 19.8, 20.32, 20.8, 21.32, 21.8, 22.8, 23.28, 23.8, 24.28, 24.8, 25.32, 25.8, 26.32, 26.8, 27.32, 27.8, 28.8, 29.32, 29.8, 30.32, 30.8, 31.68, 32.16, 32.8, 33.32, 33.8, 34.32, 35.32, 36.32, 37.32, 37.8, 38.32, 38.8, 39.32, 39.8, 40.32, 40.8, 41.32, 41.8, 45.4, 46.64, 48.28, 50.24, 51.32, 52.32])
    #     # keys.append([-0.015382, -0.015382, -0.016916, -0.039926, -0.00464395, -0.00924597, -0.00771196, -0.0798099, -0.0890139, -0.029188, -0.710284, -0.382007, -0.01078, -1.63068, -1.57546, -1.63068, -1.57546, -0.00310997, -0.581429, -0.848343, -1.19503, -0.434165, -0.00464395, -0.454107, -0.0245859, -0.454107, -0.0245859, -0.454107, -0.0245859, -0.604437, -0.401949, -0.01078, -0.016916, -0.00771196, -0.401949, -0.51845, -0.461692, -0.719404, -0.112024, -0.104354, -0.570689, -0.0706059, -0.55535, -0.0767419, -0.543078, -0.073674, -0.526205, -0.067538, -0.642787, -0.886694, -0.612108, -0.487854, -1.00941, -1.00941, -0.00924597, -0.303775, -0.047596, -0.04913, -0.0537319, -0.679603, -0.019984, -0.679603, -0.019984, -0.242414, -0.400415, -0.544613, -0.285367, -0.181053, -0.972599, -1.24872, -0.846809, -0.47865, -0.480184, -0.027654, -0.00924597, -0.00924597, -0.33292, -0.22554])
    #     #
    #     # names.append("RWristYaw")
    #     # times.append([1.4, 3.08, 3.44, 4.4, 5.16, 6.64, 7.2, 8.24, 8.72, 9.2, 9.72, 10.72, 11.72, 12.72, 13.72, 15.24, 17.24, 18.24, 19.24, 20.72, 22.24, 22.72, 23.72, 27.88, 28.72, 30.24, 32.72, 33.72, 37.24, 38.24, 39.24, 45.36, 50.2])
    #     # keys.append([0.37272, 0.37272, -0.0951499, 0.18097, 0.748551, 0.85593, 1.03387, 0.826783, 0.849794, 0.826783, 1.0937, 0.27301, 1.43271, 1.23636, 1.61833, 1.31153, 1.31153, -0.421891, 0.604353, -0.366667, -0.366667, -0.366667, 1.04921, 1.04921, 0.731675, 0.731675, 0.733209, -0.0414599, -0.0445279, 0.429478, 0.984786, 0.989389, 0.989389])
    #     #
    #     # try:
    #     #     id = self.proxy['motion'].post.angleInterpolation(names, keys, times, True)
    #     #     self.proxy['motion'].wait(id, 0)
    #     #     id2 = self.proxy['posture'].post.goToPosture("Stand", self.posture['stand']['speed']/100.)
    #     #     self.proxy['posture'].wait(id2, 0)
    #     #
    #     # except BaseException, err:
    #     #     self.proxy['motion'].rest()
    #     #     print err

    #     names = list()
    #     times = list()
    #     keys = list()

    #     names.append("HeadPitch")
    #     times.append([0.24, 1.64, 1.96, 2.44, 3.52, 4.08, 4.8, 5.6, 6.12, 6.64, 7.16, 7.64, 8.12, 8.64, 9.16, 9.64, 10.16, 10.64, 11.16, 11.64, 12.16, 13.16, 13.64, 14.16, 14.64, 15.16, 15.64, 16.16, 16.64, 17.64, 18.16, 18.64, 19.16, 19.64, 20.64, 21.64, 22.12, 22.64, 23.12, 23.64, 24.16, 24.64, 25.16, 25.64, 26.16, 26.64, 27.64, 28.64, 29, 29.16, 29.64, 30.52, 31, 31.64, 32.16, 32.64, 33.16, 33.64, 34.16, 34.64, 35.16, 35.64, 36.16, 37.16, 37.64, 38.16, 38.64, 39.16, 39.64, 40.16, 40.64, 44.44, 45.6, 47.36, 49.2, 50.12, 51.08])
    #     keys.append([0.44175, 0.44175, -0.443368, -0.443368, 0.369652, 0.496974, 0.454021, -0.084412, -0.082878, 0.325165, -0.066004, 0.217786, -0.066004, -0.375872, 0.00456004, -0.365133, 0.00456004, 0.205514, -0.200996, 0.00762803, 0.131882, 0.170232, -0.0782759, -0.50166, -0.0782759, -0.50166, -0.0782759, -0.50166, -0.656595, 0.343573, 0.361981, -0.04913, -0.380475, 0.240796, 0.516916, 0.108872, 0.0981341, 0.4034, 0.532256, 0.0735901, 0.269941, -0.182588, 0.085862, -0.182588, 0.085862, 0.325165, 0.091998, 0.467829, 0.01223, 0.380389, 0.380389, 0.447886, 0.340507, 0.00609404, -0.368202, 0.434081, -0.369736, 0.38806, -0.30224, 0.38806, -0.369736, 0.38806, -0.30224, -0.066004, -0.635118, 0.268407, 0.397265, -0.547679, 0.397265, 0.523053, -0.389678, 0.085862, -0.552281, 0.481634, 0.481634, -0.475581, 0.0705221])

    #     names.append("HeadYaw")
    #     times.append([0.24, 1.64, 1.96, 2.44, 3.52, 4.08, 4.8, 5.6, 6.12, 6.64, 7.16, 7.64, 8.12, 8.64, 9.16, 9.64, 10.16, 10.64, 11.16, 11.64, 12.16, 13.16, 13.64, 14.16, 14.64, 15.16, 15.64, 16.16, 16.64, 17.64, 18.16, 18.64, 19.16, 19.64, 20.64, 21.64, 22.12, 22.64, 23.12, 23.64, 24.16, 24.64, 25.16, 25.64, 26.16, 26.64, 27.64, 28.64, 29, 29.16, 29.64, 30.52, 31, 31.64, 32.16, 32.64, 33.16, 33.64, 34.16, 34.64, 35.16, 35.64, 36.16, 37.16, 37.64, 38.16, 38.64, 39.16, 39.64, 40.16, 40.64, 44.44, 45.6, 47.36, 49.2, 50.12, 51.08])
    #     keys.append([-0.467912, -0.467912, 0.260738, 0.260738, 0.230059, 0.538392, -0.512397, -0.917375, -0.021518, -1.126, -0.0629359, -0.918907, -0.0629359, -1.02936, -0.016916, -1.02015, -0.016916, -1.09225, 0.79457, -0.214801, 0.993989, -1.18429, -0.0859459, -0.0706059, -0.0859459, -0.0706059, -0.0859459, -0.0706059, -0.0782759, 0.5568, -0.411154, -0.0537319, 0.0720561, 0.493905, -0.39428, -0.015382, -0.0184499, -0.426494, -0.20944, 0.039842, -0.14884, -0.122762, -0.128898, -0.122762, -0.128898, 0.351244, -0.763974, 0.538392, -0.627448, -0.61671, -0.61671, 0.366584, 0.642704, 0.691793, 0.87127, -0.012314, -0.65506, 0.032172, 0.621227, 0.032172, -0.65506, 0.032172, 0.621227, 0.11961, -0.52467, 0.658043, 0.742414, 0.115008, -0.742414, 0.4034, -0.845275, 0.113474, 0.0459781, -0.01078, -0.01078, -0.00464395, -0.208666])

    #     names.append("LAnklePitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([0.0623418, 0.0623418, 0.0623418, -0.0312323, -0.0879903, -0.0879903, -0.0281642, -0.0158923, -0.0158923, -0.493928, -0.430072, -0.493928, -0.418879, 0.020944, -0.767552, -0.568977, -0.0910584, -0.298148, -0.298148, -0.293215, -0.682424, -0.781907, -0.357974, -0.425471, -0.256563, -0.280998, -0.518363, -0.167552, -0.292008, -0.0112903, -0.121738, -0.121738, -0.489898, -0.879534, -0.879534, -0.176962, -0.176962, -0.00361468, -0.308887, 0.0101913, 0.0608078, 0.21881, 0.162052, 0.207694, 0.162052, -0.0802851, -0.155334, -0.1309, -0.549725, -0.595157, -0.643299, 0.0654097, 0.224945, 0.224945, -0.0419703])

    #     names.append("LAnkleRoll")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([-0.151844, -0.151844, -0.0605488, 0.131201, 0.151143, 0.151143, 0.154211, -0.0973648, -0.0973648, 0.0729092, 0.143473, 0.0729092, 0.143473, -0.0436748, 0.138871, 0.100521, -0.0329368, 0.0192192, 0.0192192, 0.0667732, -0.137881, -0.0558505, -0.165806, -0.0268008, 0.0279253, 0.0558505, 0.179769, 0.219911, 0.0227781, -0.193732, 0.0483652, 0.0483652, -0.194007, -0.0959931, -0.0988987, -0.39968, -0.328998, 0.225266, -0.0139626, 0.139362, 0.0621712, 0.0330253, -0.0927629, 0.00437015, -0.0927629, -0.00532477, -0.00532477, 0.140405, -0.0927629, -0.226221, -0.246163, -0.0912287, 0.0253553, 0.0253553, -0.0636167])

    #     names.append("LElbowRoll")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([0, 0, -0.016832, -0.424876, -1.27778, -1.04615, -1.05995, -0.743948, -0.539926, -0.342041, -1.44345, -0.800706, -0.969447, -0.6335, -0.131882, -0.6335, -0.131882, -1.05228, -0.254602, -0.00609404, -0.984786, -0.966378, -0.745483, 0, -0.612024, 0, -0.612024, 0, -0.612024, -0.523053, -1.06149, -0.455555, -0.952573, -0.492371, -1.06149, -0.83147, -1.36837, -1.14594, -0.472429, -0.624296, -0.424876, -0.61049, -0.424876, -0.596684, -0.424876, -0.601287, -0.429478, -0.605888, -1.23636, -0.920358, -0.196309, -0.093532, -0.914223, -0.914223, -0.906552, -1.23943, -0.742414, -0.759288, -0.00609404, -0.711735, -0.0183661, -0.711735, -0.0183661, -0.601287, -0.676451, -0.585945, -0.223922, -0.271475, -0.736278, -1.03081, -0.929562, -1.03541, -1.01853, -1.02314, 0, 0, -1.47106, -0.710201])

    #     names.append("LElbowYaw")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([-1.13213, -1.13213, -1.13827, -1.18429, -1.21344, -0.964928, -0.667332, -1.2932, -2.0944, -2.08782, -0.744032, -2.05101, -0.0245859, -0.483252, -0.481718, -0.483252, -0.481718, -0.38661, 0.06592, -0.029188, -0.196393, -0.200996, -0.544613, -0.420357, -0.374338, -0.420357, -0.374338, -0.420357, -0.374338, -0.819198, -1.6629, -0.918907, 0.075124, -0.553816, -1.6629, -0.941834, -0.523053, -2.08007, -2.00037, -1.51563, -1.68591, -1.5233, -1.68591, -1.53097, -1.68591, -1.52484, -1.6767, -1.51717, -1.20577, 0.877407, 0.507713, 0.500042, 0.883542, 0.883542, -0.259288, 0.207048, 0.447886, -0.506262, -0.231677, -0.204064, -0.213269, -0.204064, -0.213269, -0.538476, -2.0944, -0.415757, -2.0944, -2.0944, -1.76414, -0.366667, -1.92674, -0.337522, -0.335988, -1.3699, -2.01418, -2.01418, -0.457173, -1.11066])

    #     names.append("LHand")
    #     times.append([0.28, 1.96, 2.32, 3.28, 4.04, 5.52, 6.08, 7.12, 7.6, 8.08, 8.6, 9.6, 10.6, 11.6, 12.6, 14.12, 16.12, 17.12, 18.12, 19.6, 21.12, 21.6, 22.6, 26.76, 27.6, 29.12, 31.6, 32.6, 36.12, 37.12, 38.12, 44.24, 49.08, 50.04])
    #     keys.append([0.674206, 0.674206, 0.674206, 0.258935, 0.258935, 0.258935, 0.256753, 0.613843, 0.613843, 0.613843, 0.614934, 0.613479, 0.613479, 0.257844, 0.257844, 0.796751, 0.796751, 0.295298, 0.295298, 0.296389, 0.295298, 0.295298, 0.237117, 0.24148, 0.574934, 0.577116, 0.577479, 0.577843, 0.577479, 0.577843, 0.577479, 0.577843, 0.577843, 0.221818])

    #     names.append("LHipPitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([-0.127294, -0.127294, -0.127294, -0.0920118, 0.497044, 0.497044, 0.343645, 0.274614, 0.274614, 0.34978, 0.406538, 0.34978, 0.406538, 0.0123002, 0.193313, 0.00923218, 0.340577, 0.25774, 0.25774, -0.13343, -0.168712, -0.329782, 0.0567862, 0.262342, -0.185867, 0.107127, -0.139847, 0.186895, 0.26973, 0.33444, 0.398869, 0.398869, -0.0199139, -0.361995, -0.361995, 0.139622, 0.139622, 0.298877, 0.162632, 0.289672, 0.397335, -0.38654, -0.400345, -0.354607, -0.400345, 0.306829, 0.306829, 0.424946, 0.497044, 0.223992, 0.230129, 0.200982, -0.383472, -0.383472, 0.266945])

    #     names.append("LHipRoll")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([0.0610059, 0.0610059, 0.0610059, -0.147618, -0.189037, -0.189037, -0.127676, 0.134638, 0.134638, 0.014986, 0.0870839, 0.014986, 0.0870839, 0.073278, 0.014986, -0.0816561, 0.090152, 0.0671419, 0.0671419, -0.0555781, 0.39235, 0.226678, 0.16225, 0.0870839, -0.0496235, -0.419317, -0.345685, -0.255179, 0.0853684, 0.295708, 0.014986, 0.014986, 0.389282, 0.754373, 0.754373, 0.631654, 0.631654, -0.359491, -0.397659, -0.195353, -0.077054, -0.130744, 0.0119179, -0.18615, 0.0119179, 0.0349279, 0.0349279, -0.179832, 0.212873, 0.536546, 0.550351, 0.134638, -0.0893261, -0.0893261, 0.133104])

    #     names.append("LHipYawPitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([-0.576742, -0.576742, -0.576742, -0.576742, -0.404934, -0.404934, -0.455555, -0.289883, -0.289883, -0.54146, -0.959931, -0.54146, -0.959931, -0.496974, -0.493905, -0.404934, -0.360449, -0.384992, -0.384992, -0.483168, -0.391128, -0.340507, -0.303691, -0.354312, -0.483168, -0.391128, -0.340507, -0.303691, -0.384992, -0.401866, -0.384992, -0.384992, -0.358915, -0.628898, -0.628898, -0.582879, -0.582879, -0.358915, -0.674919, -0.582879, -0.443284, -0.500042, -0.506179, -0.506179, -0.506179, -0.329768, -0.329768, -0.489305, -0.277612, -0.354312, -0.361981, -0.253067, -0.398797, -0.398797, -0.470897])

    #     names.append("LKneePitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([0.212592, 0.212592, 0.212592, 0.430419, 0.0177736, 0.0177736, 0.0116376, 0.0346476, 0.0346476, 0.692733, 0.67586, 0.692733, 0.67586, 0.34605, 1.02254, 0.965785, 0.0714636, 0.405876, 0.405876, 0.671257, 1.14373, 1.33343, 0.497419, 0.494848, 0.699619, 0.540082, 1.00949, 0.268564, 0.388217, 0.0300457, 0.109814, 0.109814, 0.729549, 1.58552, 1.58552, 0.408943, 0.408943, 0.0292604, 0.849202, 0.181127, 0.0147056, 0.0423176, 0.0591916, 0.0538045, 0.0591916, 0.0315796, 0.0315796, 0.183446, 0.493314, 0.766365, 0.738754, 0.0131716, 0.0269776, 0.0269776, 0.114416])

    #     names.append("LShoulderPitch")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([1.08143, 1.08143, 1.12898, 1.52169, 1.95733, 1.61986, 1.35601, 1.37135, 1.31613, 1.55697, 1.72417, 1.54623, 0.651908, 1.64287, 1.64287, 1.64287, 1.64287, 1.15199, 1.29159, 1.09523, 1.04461, 1.07529, 1.34374, -1.05237, -0.823801, -1.05237, -0.823801, -1.05237, -0.823801, -0.510863, 1.3913, 2.05704, 2.0944, 1.73491, 1.3913, 1.40058, 0.704148, 0.808459, 1.59072, 1.57998, 1.61066, 1.60299, 1.60912, 1.60912, 1.60912, 1.60452, 1.60452, 1.60606, 1.39436, -0.0706059, 0.394197, 0.394197, -0.019984, -0.019984, 0.926494, 0.555266, 0.139552, -0.243948, 0.917291, 0.889678, 0.88661, 0.889678, 0.88661, 1.03081, 0.29602, -1.37297, 0.256136, 0.608956, -0.10282, -0.401949, 0.312894, 1.34067, 1.35448, 1.48487, 1.54163, 1.54163, 1.27778, 1.59532])

    #     names.append("LShoulderRoll")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([0.085862, 0.085862, 0.115008, 0.118076, 0.223922, 0.0291041, 0.021434, 0.021434, 0.075124, 0.0260361, 0.789967, 0.484702, 0.021434, 0.911154, 1.18881, 0.911154, 1.18881, 0.0551821, 1.48027, 0.144154, 0.0275701, 0.0352401, 0.021434, 0.432547, 0.0352401, 0.432547, 0.0352401, 0.432547, 0.0352401, 0.507713, 0.481634, 0.51845, 0.461692, 0.719404, 0.481634, 0.01078, 0.016916, 0.00771196, 0.0643861, 0.102736, 0.0904641, 0.0904641, 0.0904641, 0.0904641, 0.091998, 0.0904641, 0.0904641, 0.093532, 0.409536, 0.052114, 0.552198, 0.731675, 0.076658, 0.076658, 0.977116, 0.668782, 1.43118, 1.36982, 0.207048, 0.021434, 0.863599, 0.021434, 0.863599, 0.358915, 0.658043, 0.187106, 0.831386, 0.751617, 0.616627, 0.033706, 0.613558, 0.536858, 0.549129, 0.383458, 0.438682, 0.438682, 0.391128, 0.199378])

    #     names.append("LWristYaw")
    #     times.append([0.28, 1.96, 2.32, 3.28, 4.04, 5.52, 6.08, 6.6, 7.12, 7.6, 8.08, 8.6, 9.6, 10.6, 11.6, 12.6, 14.12, 16.12, 17.12, 18.12, 19.6, 21.12, 21.6, 22.6, 26.76, 27.6, 29.12, 31.6, 32.6, 36.12, 37.12, 38.12, 44.24, 49.08])
    #     keys.append([0.415673, 0.415673, 0.243864, -0.188724, 0.351244, 0.265341, 1.10904, -0.570723, -0.79312, -0.813062, -0.79312, -1.42666, -1.15514, -1.82551, -0.93118, -0.0767419, -1.30394, -1.30394, 0.676451, 0.839057, 0.118076, 0.136484, 0.136484, 0.567537, 0.550664, -0.231677, -0.236277, -0.22554, -0.374338, -0.372804, -0.558418, -0.673468, -0.667332, -0.667332])

    #     names.append("RAnklePitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([-0.245987, -0.245987, -0.245987, -0.426998, -0.353366, -0.353366, -0.00668269, 0.00098731, 0.00098731, -0.0802851, 0.258309, -0.0802851, 0.246091, -0.31765, -0.594204, 0.0575959, -0.0787807, -0.292008, -0.292008, -0.256563, -0.293215, -0.518363, -0.207637, -0.456145, -0.293215, -0.670206, -0.681649, -0.305433, -0.298148, -0.0358286, -0.0296928, -0.0296928, -0.00361468, -0.205949, -0.179769, 0.0101913, 0.0101913, -0.489898, -0.86879, -0.176962, -0.0726446, 0.181999, 0.207694, 0.162052, 0.207694, -0.116937, -0.179769, -0.1309, -0.509835, 0.144862, 0.0746193, -0.0404307, 0.175863, 0.175863, 0.0332012])

    #     names.append("RAnkleRoll")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([-0.0657301, -0.0657301, -0.0657301, 0.179769, 0.179769, 0.179769, 0.233874, 0.179769, 0.179769, 0.261799, 0.303687, 0.303687, 0.371755, 0.233874, 0.289725, 0.579449, 0.165806, 0.0680678, 0.0558505, -0.0933421, -0.0558505, -0.137881, -0.151844, 0.0278439, 0.0139626, 0.137881, 0.109637, 0.179769, -0.0192192, -0.0780021, 0.151844, 0.0355138, -0.225266, 0.0680678, 0.0558505, -0.139362, -0.139362, 0.194007, 0.106078, 0.328998, 0.34383, 0.165806, -0.00437015, 0.0927629, -0.00437015, 0.137881, 0.205949, 0.39968, 0.0416498, 0.179769, 0.136758, 0.0661939, -0.0289142, -0.0289142, -0.0749341])

    #     names.append("RElbowRoll")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([1.55552, 1.55552, 1.54018, 0.449504, 1.02322, 1.07384, 1.55245, 1.09685, 1.46501, 0.446436, 1.24718, 0.673468, 0.833004, 0.398883, 0.658129, 0.398883, 0.658129, 1.17355, 0.521602, 0.751701, 0.023052, 0.636652, 1.11833, 4.19617e-05, 0.656595, 4.19617e-05, 0.656595, 4.19617e-05, 0.656595, 0.598302, 0.980268, 0.83147, 1.36837, 1.14594, 0.980268, 0.455555, 0.952573, 0.492371, 1.52944, 0.89283, 1.48649, 0.994073, 1.48956, 0.994073, 1.48956, 0.981802, 1.46961, 0.966462, 1.55092, 0.765508, 1.55552, 1.56319, 0.691876, 0.691876, 0.503194, 0.582963, 0.925044, 1.26866, 0.506262, 0.019984, 0.628982, 0.019984, 0.628982, 0.43263, 0.717953, 0.265424, 1.17662, 1.33155, 1.44047, 0.443368, 1.35303, 0.823801, 0.840674, 1.18429, 1.13674, 1.13674, 1.29627, 0.687274])

    #     names.append("RElbowYaw")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([0.662646, 0.662646, 1.44038, 2.0908, 1.99262, 0.872804, 0.569072, 1.38209, 2.0908, 2.08773, 0.785367, 2.08926, -0.273093, 0.516916, 1.30539, 0.516916, 1.30539, 0.555266, 1.18114, 0.96331, 0.955639, 1.3238, 0.593616, 0.233125, 0.170232, 0.233125, 0.170232, 0.233125, 0.170232, 0.984786, 2.08007, 0.941834, 0.523053, 2.08007, 2.08007, 0.918907, -0.075124, 0.553816, 0.944902, 2.0816, 0.757754, 2.0944, 0.75622, 2.07853, 0.743948, 2.07239, 0.74088, 2.07699, 0.450955, -0.306841, -0.405018, -0.234743, -0.306841, -0.306841, -0.217869, 0.282215, -0.214801, 0.628898, 0.354312, 0.615092, 0.369652, 0.615092, 0.369652, 0.575208, 2.09387, 0.825249, 0.33437, -0.055266, -1.0493, 1.31153, 0.793036, -0.119694, -0.11049, 1.15199, 0.11961, 0.11961, 0.357381, 1.18881])

    #     names.append("RHand")
    #     times.append([0.28, 1.96, 2.32, 3.28, 4.04, 5.52, 6.08, 7.12, 7.6, 8.08, 8.6, 9.6, 10.6, 11.6, 12.6, 14.12, 16.12, 17.12, 18.12, 19.6, 21.12, 21.6, 22.6, 23.12, 23.64, 24.4, 25.16, 25.88, 26.76, 27.6, 29.12, 31.6, 32.6, 36.12, 37.12, 38.12, 44.24, 49.08, 50.04])
    #     keys.append([0.178571, 0.178571, 0.537479, 0.381116, 0.382207, 0.382207, 0.382207, 0.585115, 0.585115, 0.585115, 0.587661, 0.588025, 0.587661, 0.249844, 0.249844, 0.849115, 0.849115, 0.340389, 0.340389, 0.340753, 0.340389, 0.340389, 0.247273, 0.630909, 0.370909, 0.723636, 0.469091, 0.749091, 0.469091, 0.808388, 0.810933, 0.81166, 0.81166, 0.811297, 0.811297, 0.814206, 0.81166, 0.81166, 0.287273])

    #     names.append("RHipPitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([-0.0386032, -0.0386032, -0.0386032, -0.0309332, 0.0595728, 0.0595728, 0.202235, 0.277401, 0.277401, 0.0288929, 0.355635, 0.0288929, 0.355635, 0.153147, 0.176156, 0.337227, 0.355635, 0.26973, 0.26973, -0.185867, 0.107127, -0.139847, 0.186895, 0.21144, -0.13343, -0.168712, -0.329782, 0.0567862, 0.25774, 0.397054, 0.409325, 0.409325, 0.298877, 0.165419, 0.165419, 0.289672, 0.289672, -0.0199139, -0.366879, 0.139622, 0.435402, -0.331597, -0.354607, -0.400345, -0.354607, 0.317285, 0.317285, 0.435402, 0.498297, 0.337227, 0.357169, 0.183827, -0.353073, -0.353073, 0.309614])

    #     names.append("RHipRoll")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([0.0849055, 0.0849055, 0.0849055, -0.206554, -0.301663, -0.301663, -0.221894, -0.159001, -0.159001, -0.439722, -0.648346, -0.439722, -0.648346, -0.341547, -0.33541, -0.622269, -0.119116, -0.0853684, -0.0853684, 0.0496235, 0.419317, 0.345685, 0.255179, -0.131389, 0.0555781, -0.39235, -0.226678, -0.16225, -0.0671419, 0.0511575, -0.148262, -0.148262, 0.359491, 0.382501, 0.382501, 0.195353, 0.195353, -0.389282, -0.734251, -0.631654, -0.488811, 0.0204776, 0.18615, -0.0119179, 0.18615, -0.178942, -0.178942, -0.531762, -0.119116, 0.00973951, -0.0163385, -0.129854, 0.103314, 0.103314, 0.00973951])

    #     names.append("RKneePitch")
    #     times.append([0.2, 1.92, 2.48, 2.92, 4, 4.32, 5.56, 6.72, 7.72, 8.72, 9.24, 9.72, 10.24, 11.12, 11.92, 12.72, 13.72, 14.72, 16.24, 16.72, 17.24, 17.72, 18.24, 18.72, 19.24, 19.72, 20.24, 20.72, 21.72, 23.2, 25.24, 26.24, 26.72, 27.72, 28.4, 29.24, 29.6, 30.32, 31.08, 31.72, 32.24, 33.24, 34.24, 35.24, 36.24, 37.24, 37.72, 38.72, 39.72, 40.72, 44.36, 45.64, 47.28, 49.16, 50.88])
    #     keys.append([0.41276, 0.41276, 0.41276, 0.691948, 0.6582, 0.6582, 0.0844844, 0.0277265, 0.0277265, 0.606045, 0.142776, 0.606045, 0.142776, 0.503266, 0.905175, 0.0277265, 0.0476684, 0.388217, 0.388217, 0.699619, 0.540082, 1.00949, 0.268564, 0.561558, 0.671257, 1.14373, 1.33343, 0.497419, 0.405876, 0.0307944, 0.0292604, 0.0292604, 0.0292604, 0.822338, 0.822338, 0.181127, 0.181127, 0.729549, 1.52951, 0.408943, 0.0461345, 0.0246584, 0.0538045, 0.0591916, 0.0538045, 0.0399984, 0.0399984, 0.173456, 0.475655, 0.0630085, 0.0323284, 0.115164, 0.0323284, 0.0323284, 0.0292604])

    #     names.append("RShoulderPitch")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([0.38661, 0.38661, 0.515466, 1.60614, 2.07555, 1.44814, 0.664264, 1.2119, 0.952657, 1.68591, 1.78715, 1.5095, 0.96186, 1.17815, 1.2932, 1.17815, 1.2932, 0.719487, 1.91908, 2.08321, 2.08782, 1.48495, 1.24258, -1.11978, -0.926494, -1.11978, -0.926494, -1.11978, -0.926494, -0.404934, 1.40979, 1.40058, 0.704148, 0.808459, 1.40979, 2.05704, 2.0944, 1.73491, 1.34536, 1.88839, 1.3561, 1.45427, 1.38524, 1.44967, 1.40058, 1.45734, 1.41899, 1.46961, 1.16895, 0.247016, 0.254685, 0.273093, 0.179519, 0.179519, 0.728692, 0.90817, 0.211735, 0.289967, 0.948054, 1.11373, 0.823801, 1.11373, 0.823801, 0.987938, 0.154976, -1.19801, -0.507713, -0.506179, -0.361981, 0.335988, 0.365133, -1.44959, -1.43885, 0.648924, 0.935783, 0.935783, 1.18889, 1.67977])

    #     names.append("RShoulderRoll")
    #     times.append([0.32, 2, 2.52, 3.36, 4.12, 4.92, 5.68, 5.92, 6.2, 6.68, 7.2, 7.68, 8.16, 8.68, 9.2, 9.68, 10.2, 10.68, 11.2, 11.68, 12.2, 12.6, 12.92, 13.68, 14.2, 14.68, 15.2, 15.68, 16.2, 16.68, 17.2, 17.68, 18.2, 18.68, 19.2, 19.68, 20.2, 20.68, 21.68, 22.16, 22.68, 23.16, 23.68, 24.2, 24.68, 25.2, 25.68, 26.2, 26.68, 27.68, 28.2, 28.68, 29.2, 29.68, 30.56, 31.04, 31.68, 32.2, 32.68, 33.2, 34.2, 35.2, 36.2, 36.68, 37.2, 37.68, 38.2, 38.68, 39.2, 39.68, 40.2, 40.68, 44.28, 45.52, 47.16, 49.12, 50.2, 51.2])
    #     keys.append([-0.015382, -0.015382, -0.016916, -0.039926, -0.00464395, -0.00924597, -0.00771196, -0.0798099, -0.0890139, -0.029188, -0.710284, -0.382007, -0.01078, -1.63068, -1.57546, -1.63068, -1.57546, -0.00310997, -0.581429, -0.848343, -1.19503, -0.434165, -0.00464395, -0.454107, -0.0245859, -0.454107, -0.0245859, -0.454107, -0.0245859, -0.604437, -0.401949, -0.01078, -0.016916, -0.00771196, -0.401949, -0.51845, -0.461692, -0.719404, -0.112024, -0.104354, -0.570689, -0.0706059, -0.55535, -0.0767419, -0.543078, -0.073674, -0.526205, -0.067538, -0.642787, -0.886694, -0.612108, -0.487854, -1.00941, -1.00941, -0.00924597, -0.303775, -0.047596, -0.04913, -0.0537319, -0.679603, -0.019984, -0.679603, -0.019984, -0.242414, -0.400415, -0.544613, -0.285367, -0.181053, -0.972599, -1.24872, -0.846809, -0.47865, -0.480184, -0.027654, -0.00924597, -0.00924597, -0.33292, -0.22554])

    #     names.append("RWristYaw")
    #     times.append([0.28, 1.96, 2.32, 3.28, 4.04, 5.52, 6.08, 7.12, 7.6, 8.08, 8.6, 9.6, 10.6, 11.6, 12.6, 14.12, 16.12, 17.12, 18.12, 19.6, 21.12, 21.6, 22.6, 26.76, 27.6, 29.12, 31.6, 32.6, 36.12, 37.12, 38.12, 44.24, 49.08])
    #     keys.append([0.37272, 0.37272, -0.0951499, 0.18097, 0.748551, 0.85593, 1.03387, 0.826783, 0.849794, 0.826783, 1.0937, 0.27301, 1.43271, 1.23636, 1.61833, 1.31153, 1.31153, -0.421891, 0.604353, -0.366667, -0.366667, -0.366667, 1.04921, 1.04921, 0.731675, 0.731675, 0.733209, -0.0414599, -0.0445279, 0.429478, 0.984786, 0.989389, 0.989389])

    #     try:
    #         id = self.proxy['motion'].post.angleInterpolation(names, keys, times, True)
    #         self.proxy['motion'].wait(id, 0)
    #         id2 = self.proxy['posture'].post.goToPosture("Stand", self.posture['stand']['speed']/100.)
    #         self.proxy['posture'].wait(id2, 0)

    #     except BaseException, err:
    #         self.proxy['motion'].rest()
    #         print err


    def playGuitar(self):
        self.enableMotion()
        if self.isSeated == True:
            self.standUp()

        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([1.26667, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8])
        keys.append([0.0797261, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, -0.055266, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, 0.191709, -0.055266, -0.055266, -0.055266, 0.191709, -0.055266, 0.191709, -0.22554, 0.0812601])

        names.append("HeadYaw")
        times.append([1.26667, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8])
        keys.append([-0.108956, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.20253, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.176453, -0.20253, -0.20253, -0.20253, -0.176453, -0.20253, -0.176453, -0.428028, -0.108956])

        names.append("LAnklePitch")
        times.append([1.26667, 1.66667])
        keys.append([-0.374338, -0.374338])

        names.append("LAnkleRoll")
        times.append([1.26667, 1.66667])
        keys.append([0.016916, 0.016916])

        names.append("LElbowRoll")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([-1.03541, -1.05688, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.05688, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.05688, -1.05688, -1.04461, -1.05688, -1.04461, -1.05688, -1.04461, -1.04461])

        names.append("LElbowYaw")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([-1.76261, -1.75341, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75495, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75495, -1.75495, -1.75034, -1.75495, -1.75034, -1.75495, -1.75034, -1.75034])

        names.append("LHand")
        times.append([1.26667])
        keys.append([0.920024])

        names.append("LHipPitch")
        times.append([1.26667, 1.66667])
        keys.append([-0.162562, -0.162562])

        names.append("LHipRoll")
        times.append([1.26667, 1.66667])
        keys.append([0.101286, 0.101286])

        names.append("LHipYawPitch")
        times.append([1.26667, 1.66667])
        keys.append([-0.395731, -0.395731])

        names.append("LKneePitch")
        times.append([1.26667, 1.66667])
        keys.append([0.789967, 0.789967])

        names.append("LShoulderPitch")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([0.745483, 0.733209, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.743948, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.743948, 0.743948, 0.760822, 0.743948, 0.760822, 0.743948, 0.760822, 0.760822])

        names.append("LShoulderRoll")
        times.append([1.26667, 1.93333, 2.33333, 3, 3.8, 4.66667, 5.46667, 6.26667, 7.06667, 7.8, 8.6, 9.4, 10.2, 11, 11.8667, 12.6667, 13.4667, 14.3333, 15.2, 16, 16.8, 17.3333])
        keys.append([0.515382, 0.516916, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.501576, 0.50311])

        names.append("LWristYaw")
        times.append([1.26667])
        keys.append([-1.01862])

        names.append("RAnklePitch")
        times.append([1.26667, 1.66667])
        keys.append([-0.207048, -0.207048])

        names.append("RAnkleRoll")
        times.append([1.26667, 1.66667])
        keys.append([0.032256, 0.032256])

        names.append("RElbowRoll")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([1.03242, 0.523136, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 1.22264, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 1.22264, 1.22264, 0.681137, 1.22264, 0.681137, 1.22264, 0.681137, 1.11066])

        names.append("RElbowYaw")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([0.265341, -0.029188, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, 0.408002, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, 0.408002, 0.408002, -0.138102, 0.408002, -0.138102, 0.408002, -0.138102, 0.391128])

        names.append("RHand")
        times.append([1.26667, 1.93333])
        keys.append([0.918933, 0.452752])

        names.append("RHipPitch")
        times.append([1.26667, 1.66667])
        keys.append([-0.032256, -0.032256])

        names.append("RHipRoll")
        times.append([1.26667, 1.66667])
        keys.append([-0.016832, -0.016832])

        names.append("RKneePitch")
        times.append([1.26667, 1.66667])
        keys.append([0.55535, 0.55535])

        names.append("RShoulderPitch")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([0.906636, 0.868286, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.92351, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.92351, 0.92351, 0.935783, 0.92351, 0.935783, 0.92351, 0.935783, 0.89283])

        names.append("RShoulderRoll")
        times.append([1.26667, 1.93333, 2.13333, 2.33333, 2.8, 3, 3.53333, 3.8, 4.46667, 4.66667, 5.26667, 5.46667, 6.06667, 6.26667, 6.86667, 7.06667, 7.6, 7.8, 8.4, 8.6, 9.2, 9.4, 10, 10.2, 10.8, 11, 11.6667, 11.8667, 12.4667, 12.6667, 13.2667, 13.4667, 14.1333, 14.3333, 15, 15.2, 15.8, 16, 16.6, 16.8, 17.3333])
        keys.append([-0.185656, -0.101286, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.0782759, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.0782759, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.0782759, -0.16418, -0.075208])

        names.append("RWristYaw")
        times.append([1.26667, 1.93333])
        keys.append([0.961776, 0.682588])

        try:
            id = self.proxy['motion'].post.angleInterpolation(names, keys, times, True)
            self.proxy['motion'].wait(id, 0)
            id2 = self.proxy['posture'].post.goToPosture("Stand", self.posture['stand']['speed']/100.)
            self.proxy['posture'].wait(id2, 0)

        except BaseException, err:
            self.proxy['motion'].rest()
            print err

    def sayHi(self):
        self.enableMotion()
        if self.isSeated == True:
            self.standUp()

        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.64, 0.8, 1.56, 2.24, 2.8, 3.48, 4.6])
        keys.append([-0.166598, 0.29602, -0.170316, -0.340591, -0.0598679, -0.193327, -0.01078])

        names.append("HeadYaw")
        times.append([0.64, 0.8, 1.56, 2.24, 2.8, 3.48, 4.6])
        keys.append([-0.0080321, -0.135034, -0.351328, -0.415757, -0.418823, -0.520068, -0.375872])

        names.append("LAnklePitch")
        times.append([0.64])
        keys.append([0.09])

        names.append("LAnkleRoll")
        times.append([0.64])
        keys.append([-0.126459])

        names.append("LElbowRoll")
        times.append([0.64, 0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([-1.37054, -1.37902, -1.29005, -1.18267, -1.24863, -1.3192, -1.18421])

        names.append("LElbowYaw")
        times.append([0.64, 0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([-0.805278, -0.803859, -0.691876, -0.679603, -0.610574, -0.753235, -0.6704])

        names.append("LHand")
        times.append([0.64, 1.48, 4.52])
        keys.append([0.298718, 0.238207, 0.240025])

        names.append("LHipPitch")
        times.append([0.64])
        keys.append([0.127843])

        names.append("LHipRoll")
        times.append([0.64])
        keys.append([0.0989678])

        names.append("LHipYawPitch")
        times.append([0.64])
        keys.append([-0.176901])

        names.append("LKneePitch")
        times.append([0.64])
        keys.append([-0.0832115])

        names.append("LShoulderPitch")
        times.append([0.64, 0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([1.12178, 1.11824, 0.928028, 0.9403, 0.862065, 0.897349, 0.842125])

        names.append("LShoulderRoll")
        times.append([0.64, 0.72, 1.48, 2.16, 2.72, 3.4, 4.52])
        keys.append([0.355318, 0.363515, 0.226991, 0.20398, 0.217786, 0.248467, 0.226991])

        names.append("LWristYaw")
        times.append([0.64, 1.48, 4.52])
        keys.append([0.102616, 0.147222, 0.11961])

        names.append("RAnklePitch")
        times.append([0.64])
        keys.append([0.09])

        names.append("RAnkleRoll")
        times.append([0.64])
        keys.append([0.125518])

        names.append("RElbowRoll")
        times.append([0.64, 1.4, 1.68, 2.08, 2.4, 2.64, 3.04, 3.32, 3.72, 4.44])
        keys.append([1.37312, 0.242414, 0.349066, 0.934249, 0.680678, 0.191986, 0.261799, 0.707216, 1.01927, 1.26559])

        names.append("RElbowYaw")
        times.append([0.64, 1.4, 2.08, 2.64, 3.32, 3.72, 4.44])
        keys.append([-0.304337, 0.564471, 0.391128, 0.348176, 0.381923, 0.977384, 0.826783])

        names.append("RHand")
        times.append([0.64, 1.4, 3.32, 4.44])
        keys.append([0.30781, 0.853478, 0.854933, 0.425116])

        names.append("RHipPitch")
        times.append([0.64])
        keys.append([0.122237])

        names.append("RHipRoll")
        times.append([0.64])
        keys.append([-0.094179])

        names.append("RHipYawPitch")
        times.append([0.64])
        keys.append([-0.176901])

        names.append("RKneePitch")
        times.append([0.64])
        keys.append([-0.0833418])

        names.append("RShoulderPitch")
        times.append([0.64, 1.4, 2.08, 2.64, 3.32, 4.44])
        keys.append([0.241992, -1.17193, -1.0891, -1.26091, -1.14892, 1.02015])

        names.append("RShoulderRoll")
        times.append([0.64, 1.4, 2.08, 2.64, 3.32, 4.44])
        keys.append([-0.260993, -0.954191, -0.460242, -0.960325, -0.328317, -0.250085])

        names.append("RWristYaw")
        times.append([0.64, 1.4, 3.32, 4.44])
        keys.append([0.100441, -0.312978, -0.303775, 0.182504])

        try:
            id = self.proxy['motion'].post.angleInterpolation(names, keys, times, True)
            self.proxy['motion'].wait(id, 0)
        except BaseException, err:
            self.proxy['motion'].rest()
            print err
